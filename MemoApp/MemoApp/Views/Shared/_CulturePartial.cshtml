@inject IViewLocalizer localizer
@inject IOptions<Microsoft.AspNetCore.Builder.RequestLocalizationOptions> locOptions

@{
    var culture = Context.Features.Get<Microsoft.AspNetCore.Localization.IRequestCultureFeature>();
    var listOfCultures = locOptions.Value.SupportedUICultures.Select(x => new SelectListItem { Value = x.Name, Text = localizer.GetString(x.Name) }).ToList();
    var returnUrl = string.IsNullOrWhiteSpace(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
}
<ul class="navbar-nav">
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@localizer["Settings"]</a>
        <div class="dropdown-menu" id="settingsMenu">
            <form method="post" asp-controller="Memo" asp-action="CultureManagement" asp-route-returnUrl="@returnUrl">
                <div class="form-group" id="languageForm">
                    <label>@localizer["Language"]</label>
                    <select class="custom-select-sm" id="selectedCulture" name="culture" asp-for="@culture.RequestCulture.UICulture.Name" asp-items="listOfCultures" onchange="this.form.submit();"></select>
                </div>
            </form>
        </div>
    </li>    
</ul>
