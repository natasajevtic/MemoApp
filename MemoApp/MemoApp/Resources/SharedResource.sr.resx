<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Email {0} is already taken." xml:space="preserve">
    <value>E-mail adresa {0} je već zauzeta.</value>
  </data>
  <data name="Passwords must have at least one digit ('0'-'9')." xml:space="preserve">
    <value>Lozinka mora imati bar jedan broj ('0'-'9').</value>
  </data>
  <data name="Passwords must have at least one lowercase ('a'-'z')." xml:space="preserve">
    <value>Lozinka mora imati bar jedno malo slovo.</value>
  </data>
  <data name="Passwords must have at least one non alphanumeric character." xml:space="preserve">
    <value>Lozinka mora imati bar jedan znak koji nije alfanumerički.</value>
  </data>
  <data name="Passwords must have at least one uppercase ('A'-'Z')." xml:space="preserve">
    <value>Lozinka mora imati bar jedno veliko slovo.</value>
  </data>
  <data name="Role name {0} is already taken." xml:space="preserve">
    <value>Naziv uloge {0} je već zauzet.</value>
  </data>
  <data name="Tag length must be less than 50." xml:space="preserve">
    <value>Dužina taga mora biti manja od 50 znakova.</value>
  </data>
  <data name="The Email field is not a valid e - mail address." xml:space="preserve">
    <value>Polje E-mail adresa nije validna e-mail adresa.</value>
  </data>
  <data name="The Email field is required." xml:space="preserve">
    <value>Polje E-mail adresa je obavezno.</value>
  </data>
  <data name="The Name field is required." xml:space="preserve">
    <value>Polje Naziv je obavezno.</value>
  </data>
  <data name="The Name must be less than 256 characters long." xml:space="preserve">
    <value>Naziv mora da bude kraći od 256 znakova.</value>
  </data>
  <data name="The password and confirmation password do not match." xml:space="preserve">
    <value>Lozinka i lozinka za potvrdu se ne podudaraju.</value>
  </data>
  <data name="The Password field is required." xml:space="preserve">
    <value>Polje Lozinka je obavezno.</value>
  </data>
  <data name="The Password must be at least {2} and at max {1} characters long." xml:space="preserve">
    <value>Lozinka mora imati najmanje {2}, a najviše {1} znakova.</value>
  </data>
  <data name="The Title field is required." xml:space="preserve">
    <value>Polje Naslov je obavezno.</value>
  </data>
  <data name="The Title must be less than 50 characters long." xml:space="preserve">
    <value>Naslov mora da bude kraći od 50 znakova.</value>
  </data>
  <data name="Username {0} is already taken." xml:space="preserve">
    <value>Username {0} je već zauzet.</value>
  </data>
</root>